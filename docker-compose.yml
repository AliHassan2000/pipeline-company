version: '2.2'

services:  
  invdb:
    image: alihassan5239/invdb:latest
    restart: always
    container_name: Inventory-Container
    ports:
      - '3308:3306'
    environment:
      MYSQL_ROOT_PASSWORD: As123456?
      MYSQL_DATABASE: InventoryDB
      TZ: Asia/Riyadh
    volumes:
      - ./db/inv.sql:/docker-entrypoint-initdb.d/inv.sql

  phymapping:
    image: alihassan5239/phymapping:latest
    restart: always
    container_name: Physical-Mapping-Container
    ports:
      - '3307:3306'
    environment:
      MYSQL_ROOT_PASSWORD: As123456?
      MYSQL_DATABASE: PhyMappingDB
      TZ: Asia/Riyadh
    volumes:
      - ./db/phy_mapping.sql:/docker-entrypoint-initdb.d/phy_mapping.sql
      
  flask:
    container_name: Flask_Container
    restart: always
    build: flask
    ports:
      - "5000:5000"
    volumes:
      - ./flask:/app
      - ./temp_files:/app/temp
      - ./logs:/app/logs
      - ./attachments:/app/attachments
      
    environment:
      - NET_TEXTFSM=/app/app/pullers/ntc-templates/ntc_templates/templates/
      - TZ=Asia/Riyadh
      - HOST_IP=${HOST_IP}
    depends_on:
      - invdb

  client:
    container_name: React_Container
    restart: always
    build: client
    command: ["npm", "start"]
    volumes:
      - ./client:/frontend
      - node-modules:/frontend/node_modules
    environment:
      - NODE_ENV=development
      - TZ=Asia/Riyadh
    ports:
      - '3000:3000'
    depends_on:
      - flask

volumes:
  node-modules:
