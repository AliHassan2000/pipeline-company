CREATE TABLE IF NOT EXISTS `InventoryDB`.`phy_table` (
  `SITE_ID` VARCHAR(50) NOT NULL UNIQUE,
  `REGION` VARCHAR(50) NULL,
  `SITE_NAME` VARCHAR(50) NULL UNIQUE,
  `LATITUDE` VARCHAR(70) NULL,
  `LONGITUDE` VARCHAR(70) NULL,
  `CITY` VARCHAR(50) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `STATUS` VARCHAR(50) NULL,
  `TOTAL_COUNT` INT NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  `SITE_TYPE` VARCHAR(100) NULL,
  PRIMARY KEY (`SITE_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`rack_table` (
  `RACK_ID` INT AUTO_INCREMENT NOT NULL,
  `SITE_ID` VARCHAR(50) NOT NULL,
  `RACK_NAME` VARCHAR(50) NULL UNIQUE,
  `SERIAL_NUMBER` VARCHAR(50) NULL,
  `MANUFACTUER_DATE` DATE NULL,
  `UNIT_POSITION` VARCHAR(20) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `STATUS` VARCHAR(50) NULL,
  `RU` INT NULL,
  `RFS_DATE` DATE NULL,
  `HEIGHT` VARCHAR(50) NULL,
  `WIDTH` VARCHAR(50) NULL,
  `DEPTH` VARCHAR(50) NULL,
  `PN_CODE` VARCHAR(50) NULL,
  `TAG_ID` VARCHAR(50) NULL,
  `RACK_MODEL` VARCHAR(50) NULL,
  `FLOOR` VARCHAR(50) NULL,
  `TOTAL_COUNT` INT NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  PRIMARY KEY (`RACK_ID`),
  FOREIGN KEY (SITE_ID) REFERENCES phy_table(SITE_ID));
  
CREATE TABLE IF NOT EXISTS `InventoryDB`.`device_table` (
  `DEVICE_ID` VARCHAR(50) NOT NULL UNIQUE,
  `SITE_ID` VARCHAR(50) NOT NULL,
  `RACK_ID` INT NOT NULL,
  `NE_IP_ADDRESS` VARCHAR(50) NOT NULL UNIQUE,
  `SOFTWARE_VERSION` VARCHAR(50) NULL,
  `PATCH_VERSION` VARCHAR(50) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `STATUS` VARCHAR(50) NULL,
  `RU` INT NULL,
  `DEPARTMENT` VARCHAR(50) NULL,
  `SECTION` VARCHAR(50) NULL,
  `CRITICALITY` VARCHAR(20) NULL,
  `FUNCTION` VARCHAR(50) NULL,
  `CISCO_DOMAIN` VARCHAR(50) NULL,
  `DOMAIN` VARCHAR(50) NULL,
  `MANUFACTURER` VARCHAR(50) NULL,
  `HW_EOS_DATE` DATE NULL,
  `HW_EOL_DATE` DATE NULL,
  `SW_EOS_DATE` DATE NULL,
  `SW_EOL_DATE` DATE NULL,
  `VIRTUAL` VARCHAR(20) NULL,
  `RFS_DATE` DATE NULL,
  `AUTHENTICATION` VARCHAR(10) NULL,
  `SERIAL_NUMBER` VARCHAR(50) NULL,
  `PN_CODE` VARCHAR(50) NULL,
  `TAG_ID` VARCHAR(50) NULL,
  `SUBRACK_ID_NUMBER` VARCHAR(50) NULL,
  `MANUFACTUER_DATE` DATE NULL,
  `HARDWARE_VERSION` VARCHAR(50) NULL,
  `MAX_POWER` VARCHAR(50) NULL,
  `DEVICE_NAME` VARCHAR(150) NULL,
  `SITE_TYPE` VARCHAR(50) NULL,
  `SOURCE` VARCHAR(50) NULL,
  `STACK` VARCHAR(50) NULL,
  `CONTRACT_NUMBER` VARCHAR(50) NULL,
  `CONTRACT_EXPIRY` DATE NULL,
  `ITEM_CODE` VARCHAR(50) NULL,
  `ITEM_DESC` VARCHAR(250) NULL,
  `CLEI` VARCHAR(50) NULL,
  `IMS_STATUS` VARCHAR(50) NULL,
  `IMS_FUNCTION` VARCHAR(500) NULL,
  `PARENT` VARCHAR(150) NULL,
  `VULN_FIX_PLAN_STATUS` VARCHAR(50) NULL,
  `VULN_OPS_SEVERITY` VARCHAR(50) NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  `INTEGRATED_WITH_AAA` VARCHAR(50) NULL
  `INTEGRATED_WITH_PAAM` VARCHAR(50) NULL
  `APPROVED_MBSS` VARCHAR(50) NULL
  `MBSS_IMPLEMENTED` VARCHAR(50) NULL
  `MBSS_INTEGRATION_CHECK` VARCHAR(50) NULL
  `INTEGRATED_WITH_SIEM` VARCHAR(50) NULL
  `THREAT_CASES` VARCHAR(50) NULL
  `VULNERABILITY_SCANNING` VARCHAR(50) NULL
  `VULNERABILITY_SEVERITY` VARCHAR(50) NULL
  `DISMANTLE_DATE` DATE NULL,

  PRIMARY KEY (`DEVICE_ID`),
  FOREIGN KEY (SITE_ID) REFERENCES phy_table(SITE_ID),
  FOREIGN KEY (RACK_ID) REFERENCES rack_table(RACK_ID));
  
CREATE TABLE IF NOT EXISTS `InventoryDB`.`board_table` (
  `BOARD_ID` INT AUTO_INCREMENT NOT NULL,
  `DEVICE_ID` VARCHAR(50) NOT NULL,
  `BOARD_NAME` VARCHAR(250) NOT NULL,
  `DEVICE_SLOT_ID` VARCHAR(250) NULL ,
  `SOFTWARE_VERSION` VARCHAR(50) NULL,
  `HARDWARE_VERSION` VARCHAR(50) NULL,
  `SERIAL_NUMBER` VARCHAR(50) NULL,
  `MANUFACTUER_DATE` DATE NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `STATUS` VARCHAR(50) NULL,
  `EOS_DATE` DATE NULL,
  `EOL_DATE` DATE NULL,
  `RFS_DATE` DATE NULL,
  `PN_CODE` VARCHAR(50) NULL,
  `TAG_ID` VARCHAR(50) NULL,
  `ITEM_CODE` VARCHAR(50) NULL,
  `ITEM_DESC` VARCHAR(250) NULL,
  `CLEI` VARCHAR(50) NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  `DISMANTLE_DATE` DATE NULL,
  PRIMARY KEY (`BOARD_ID`),
  FOREIGN KEY (DEVICE_ID) REFERENCES device_table(DEVICE_ID));
  
CREATE TABLE IF NOT EXISTS `InventoryDB`.`subboard_table` (
  `SUBBOARD_ID` INT AUTO_INCREMENT NOT NULL,
  `DEVICE_ID` VARCHAR(50) NOT NULL,
  `SUBBOARD_NAME` VARCHAR(250) NOT NULL,
  `SUBBOARD_TYPE` VARCHAR(150) NULL,
  `SUBRACK_ID` VARCHAR(250) NULL,
  `SLOT_NUMBER` VARCHAR(250) NULL,
  `SUBSLOT_NUMBER` VARCHAR(250) NULL,
  `SOFTWARE_VERSION` VARCHAR(50) NULL,
  `HARDWARE_VERSION` VARCHAR(50) NULL,
  `SERIAL_NUMBER` VARCHAR(50) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `STATUS` VARCHAR(50) NULL,
  `EOS_DATE` DATE NULL,
  `EOL_DATE` DATE NULL,
  `RFS_DATE` DATE NULL,
  `TAG_ID` VARCHAR(50) NULL,
  `PN_CODE` VARCHAR(50) NULL,
  `ITEM_CODE` VARCHAR(50) NULL,
  `ITEM_DESC` VARCHAR(250) NULL,
  `CLEI` VARCHAR(50) NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  `DISMANTLE_DATE` DATE NULL,
  PRIMARY KEY (`SUBBOARD_ID`),
  FOREIGN KEY (DEVICE_ID) REFERENCES device_table(DEVICE_ID));
  
CREATE TABLE IF NOT EXISTS `InventoryDB`.`sfp_table` (
  `SFP_ID` INT AUTO_INCREMENT NOT NULL,
  `DEVICE_ID` VARCHAR(50) NOT NULL,
  `MEDIA_TYPE` VARCHAR(50) NULL,
  `PORT_NAME` VARCHAR(250) NULL,
  `PORT_TYPE` VARCHAR(50) NULL,
  `CONNECTOR` VARCHAR(50) NULL,
  `MODE` VARCHAR(50) NULL,
  `SPEED` VARCHAR(50) NULL,
  `WAVELENGTH` VARCHAR(50) NULL,
  `MANUFACTURER` VARCHAR(250) NULL,
  `OPTICAL_DIRECTION_TYPE` VARCHAR(50) NULL,
  `PN_CODE` VARCHAR(50) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `STATUS` VARCHAR(50) NULL,
  `EOS_DATE` DATE NULL,
  `EOL_DATE` DATE NULL,
  `RFS_DATE` DATE NULL,
  `TAG_ID` VARCHAR(50) NULL,
  `SERIAL_NUMBER` VARCHAR(50) NULL,
  `ITEM_CODE` VARCHAR(50) NULL,
  `ITEM_DESC` VARCHAR(250) NULL,
  `CLEI` VARCHAR(50) NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  `DISMANTLE_DATE` DATE NULL,
  PRIMARY KEY (`SFP_ID`),
  FOREIGN KEY (DEVICE_ID) REFERENCES device_table(DEVICE_ID));
  
CREATE TABLE IF NOT EXISTS `InventoryDB`.`license_table` (
  `LICENSE_ID` INT AUTO_INCREMENT NOT NULL,
  `LICENSE_NAME` VARCHAR(250) NULL,
  `LICENSE_DESCRIPTION` VARCHAR(250) NULL,
  `NE_NAME` VARCHAR(50) NULL,
  `RFS_DATE` DATE NULL,
  `ACTIVATION_DATE` DATE NULL,
  `EXPIRY_DATE` DATE NULL,
  `GRACE_PERIOD` VARCHAR(10) NULL,
  `SERIAL_NUMBER` VARCHAR(50) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `STATUS` VARCHAR(50) NULL,
  `TAG_ID` VARCHAR(50) NULL,
  `CAPACITY`  VARCHAR(50) NULL,
  `USAGE`  VARCHAR(50) NULL,
  `PN_CODE` VARCHAR(50) NULL,
  `ITEM_CODE` VARCHAR(50) NULL,
  `ITEM_DESC` VARCHAR(250) NULL,
  `CLEI` VARCHAR(50) NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  `DISMANTLE_DATE` DATE NULL,

  PRIMARY KEY (`LICENSE_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`seed_table` (
  `SEED_ID` INT AUTO_INCREMENT NOT NULL,
  `SITE_ID` VARCHAR(50) NOT NULL,
  /*
  `REGION` VARCHAR(50) NULL,
  `SITE_NAME` VARCHAR(50) NULL,
  `LATITUDE` VARCHAR(50) NULL,
  `LONGITUDE` VARCHAR(50) NULL,
  `CITY` VARCHAR(50) NULL,
  `DATACENTRE_STATUS` VARCHAR(50) NULL,
  */
  `RACK_ID` VARCHAR(50) NULL,
  /*
  `FLOOR` VARCHAR(50) NULL,
  `RACK_NAME` VARCHAR(50) NULL,
  `SERIAL_NUMBER` VARCHAR(50) NULL,
  `MANUFACTUER_DATE` DATE NULL,
  `UNIT_POSITION` VARCHAR(20) NULL,
  `RACK_STATUS` VARCHAR(50) NULL,
  `RU` INT NULL,
  `HEIGHT` INT NULL,
  `WIDTH` INT NULL,
  `DEPTH` INT NULL,
  `PN_CODE` VARCHAR(50) NULL,
  `RACK_MODEL` VARCHAR(50) NULL,
  */
  `RFS_DATE` DATE NULL,
  `TAG_ID` VARCHAR(50) NULL,
  `DEVICE_ID` VARCHAR(50) NOT NULL UNIQUE,
  `NE_IP_ADDRESS` VARCHAR(50) NOT NULL UNIQUE,
  `DEVICE_RU` INT NULL,
  `DEPARTMENT` VARCHAR(50) NULL,
  `SECTION` VARCHAR(50) NULL,
  `CRITICALITY` VARCHAR(20) NULL,
  `FUNCTION` VARCHAR(50) NULL,
  /*`DOMAIN` VARCHAR(50) NULL,*/
  `CISCO_DOMAIN` VARCHAR(50) NULL,
  `VIRTUAL` VARCHAR(20) NULL,
  `AUTHENTICATION` VARCHAR(20) NULL,
  `SUBRACK_ID_NUMBER` VARCHAR(50) NULL,
  `HOSTNAME` VARCHAR(50) NULL,
  `SW_TYPE` VARCHAR(50) NULL,
  `VENDOR` VARCHAR(50) NULL,
  `ASSET_TYPE` VARCHAR(50) NULL,
  `OPERATION_STATUS` VARCHAR(50) NULL,
  `ONBOARD_STATUS` VARCHAR(50) NULL,
  `SITE_TYPE` VARCHAR(50) NULL,
  `CONTRACT_NUMBER` VARCHAR(50) NULL,
  `CONTRACT_EXPIRY` DATE NULL,
  `ITEM_CODE` VARCHAR(50) NULL,
  `ITEM_DESC` VARCHAR(250) NULL,
  `CLEI` VARCHAR(50) NULL,
  `PARENT` VARCHAR(150) NULL,
  `VULN_FIX_PLAN_STATUS` VARCHAR(50) NULL,
  `VULN_OPS_SEVERITY` VARCHAR(50) NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  `INTEGRATED_WITH_AAA` VARCHAR(50) NULL
  `INTEGRATED_WITH_PAAM` VARCHAR(50) NULL
  `APPROVED_MBSS` VARCHAR(50) NULL
  `MBSS_IMPLEMENTED` VARCHAR(50) NULL
  `MBSS_INTEGRATION_CHECK` VARCHAR(50) NULL
  `INTEGRATED_WITH_SIEM` VARCHAR(50) NULL
  `THREAT_CASES` VARCHAR(50) NULL
  `VULNERABILITY_SCANNING` VARCHAR(50) NULL
  `VULNERABILITY_SEVERITY` VARCHAR(50) NULL

  PRIMARY KEY (`SEED_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`edn_net_seed` (
  `EDN_NET_SEED_ID` INT AUTO_INCREMENT NOT NULL,
  `REGION` VARCHAR(50) NULL,
  `SEGMENT` VARCHAR(50) NULL,
  `SWITCH_ID` VARCHAR(250) NULL,
  `SWITCH_IP_ADDRESS` VARCHAR(70) NULL UNIQUE,
  `VENDOR` VARCHAR(50) NULL,
  `OS_TYPE` VARCHAR(50) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  PRIMARY KEY (`EDN_NET_SEED_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`edn_sec_seed` (
  `EDN_SEC_SEED_ID` INT AUTO_INCREMENT NOT NULL,
  `REGION` VARCHAR(50) NULL,
  `SEGMENT` VARCHAR(50) NULL,
  `FW_ID` VARCHAR(250) NULL,
  `FW_IP_ADDRESS` VARCHAR(70) NULL UNIQUE,
  `VENDOR` VARCHAR(50) NULL,
  `OS_TYPE` VARCHAR(50) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  PRIMARY KEY (`EDN_SEC_SEED_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`edn_it_seed` (
  `EDN_IT_SEED_ID` INT AUTO_INCREMENT NOT NULL,
  `SERVER_NAME` VARCHAR(250) NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `APPLICATION_NAME` VARCHAR(250) NULL,
  `OWNER_EMAIL` VARCHAR(70) NULL UNIQUE,
  `OWNER_CONTACT` VARCHAR(70) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  PRIMARY KEY (`EDN_IT_SEED_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`edn_mapping` (
  `EDN_ID` INT AUTO_INCREMENT NOT NULL,
  `REGION` VARCHAR(50) NULL,
  `SEGMENT` VARCHAR(50) NULL,
  `SWITCH_NAME` VARCHAR(250) NULL,
  `MAC_ADDRESS` VARCHAR(70) NULL,
  `SWITCH_INTERFACE` VARCHAR(250) NULL,
  `INTERFACE_DESCRIPTION` VARCHAR(250) NULL,
  `VLAN` VARCHAR(250) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `SERVER_NAME` VARCHAR(50) NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `APPLICATION_NAME` VARCHAR(50) NULL,
  `OWNER_EMAIL` VARCHAR(50) NULL,
  `OWNER_CONTACT` VARCHAR(50) NULL,
  PRIMARY KEY (`EDN_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`sntc_table` (
  `SNTC_ID` INT AUTO_INCREMENT NOT NULL,
  `PN_CODE` VARCHAR(50) NULL,
  `HW_EOS_DATE` DATE NULL,
  `HW_EOL_DATE` DATE NULL,
  `SW_EOS_DATE` DATE NULL,
  `SW_EOL_DATE` DATE NULL,
  `RFS_DATE` DATE NULL,
  `MANUFACTUER_DATE` DATE NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `ITEM_DESC` VARCHAR(250) NULL,
  `ITEM_CODE` VARCHAR(50) NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  `VULN_FIX_PLAN_STATUS` VARCHAR(50) NULL,
  `VULN_OPS_SEVERITY` VARCHAR(50) NULL,
  PRIMARY KEY (`SNTC_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`pncode_snap_table` (
  `ID` INT AUTO_INCREMENT NOT NULL,
  `PN_CODE` VARCHAR(50) NULL,
  `IGW_NET` INT NULL,
  `IGW_SYS` INT NULL,
  `EDN_NET` INT NULL,
  `EDN_SYS` INT NULL,
  `EDN_IPT` INT NULL,
  `EDN_IPT_Endpoints` INT NULL,
  `SOC` INT NULL,
  `EDN_AP` INT NULL,
  `REBD` INT NULL,
  `POS` INT NULL,
  `CDN` INT NULL,
  `CREATION_DATE` DATETIME NULL,
  
  PRIMARY KEY (`ID`));

  CREATE TABLE IF NOT EXISTS `InventoryDB`.`user_table` (
  `USER_ID` VARCHAR(50) NOT NULL UNIQUE,
  `EMAIL` VARCHAR(50) NOT NULL,
  `NAME` VARCHAR(50) NOT NULL,
  `ROLE` VARCHAR(10) NOT NULL,
  `STATUS` VARCHAR(10) NOT NULL,
  `ACCOUNT_TYPE` VARCHAR(15) NOT NULL,
  `PASSWORD` VARCHAR(512) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `LAST_LOGIN` DATETIME NULL,
  `TEAM` VARCHAR(20) NOT NULL,
  `VENDOR` VARCHAR(20) NULL,

  PRIMARY KEY (`USER_ID`));

  CREATE TABLE IF NOT EXISTS `InventoryDB`.`ipt_endpoints_table` (
  `HOSTNAME` VARCHAR(50) NOT NULL UNIQUE,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `MAC_ADDRESS` VARCHAR(50) NULL,
  `USER` VARCHAR(50) NULL,
  `PRODUCT_ID` VARCHAR(50) NULL,
  `DESCRIPTION` VARCHAR(150) NULL,
  `FIRMWARE` VARCHAR(50) NULL,
  `SERIAL_NUMBER` VARCHAR(50) NULL,
  `RFS_DATE` DATE NULL,
  `TAG_ID` VARCHAR(50) NULL,
  `PROTOCOL` VARCHAR(50) NULL,
  `CALLING_SEARCH_SPACE` VARCHAR(50) NULL,
  `DEVICE_POOL_NAME` VARCHAR(50) NULL,
  `LOCATION_NAME` VARCHAR(50) NULL,
  `RESOURCE_LIST_NAME` VARCHAR(50) NULL,
  `STATUS` VARCHAR(50) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `EXTENSIONS` VARCHAR(50) NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  PRIMARY KEY (`HOSTNAME`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`igw_ipam_table`(
  `ID` INT AUTO_INCREMENT NOT NULL,
  `REGION` VARCHAR(50) NULL,
  `SITE_ID` VARCHAR(50) NULL,
  `DEVICE_ID` VARCHAR(50) NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `SUBNET_MASK` VARCHAR(50) NULL,
  `SUBNET` VARCHAR(50) NULL,
  `PROTOCOL_STATUS` VARCHAR(50) NULL,
  `ADMIN_STATUS` VARCHAR(50) NULL,
  `VLAN` VARCHAR(50) NULL,
  `INTERFACE_NAME` VARCHAR(50) NULL,
  `VLAN_NAME` VARCHAR(50) NULL,
  `VIRTUAL_IP` VARCHAR(50) NULL,
  `DESCRIPTION` VARCHAR(1000) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `MANAGEMENT_IP` VARCHAR(50) NULL,
  `SITE_TYPE` VARCHAR(50) NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  PRIMARY KEY (`ID`) );

CREATE TABLE IF NOT EXISTS `InventoryDB`.`edn_ipam_table`(
  `ID` INT AUTO_INCREMENT NOT NULL,
  `REGION` VARCHAR(50) NULL,
  `SITE_ID` VARCHAR(50) NULL,
  `DEVICE_ID` VARCHAR(50) NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `SUBNET_MASK` VARCHAR(50) NULL,
  `SUBNET` VARCHAR(50) NULL,
  `PROTOCOL_STATUS` VARCHAR(50) NULL,
  `ADMIN_STATUS` VARCHAR(50) NULL,
  `VLAN` VARCHAR(50) NULL,
  `INTERFACE_NAME` VARCHAR(50) NULL,
  `VLAN_NAME` VARCHAR(50) NULL,
  `VIRTUAL_IP` VARCHAR(50) NULL,
  `DESCRIPTION` VARCHAR(1000) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `MANAGEMENT_IP` VARCHAR(50) NULL,
  `SITE_TYPE` VARCHAR(50)  NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  PRIMARY KEY (`ID`) );

CREATE TABLE IF NOT EXISTS `InventoryDB`.`soc_ipam_table`(
  `ID` INT AUTO_INCREMENT NOT NULL,
  `REGION` VARCHAR(50) NULL,
  `SITE_ID` VARCHAR(50) NULL,
  `DEVICE_ID` VARCHAR(50) NULL,
  `IP_ADDRESS` VARCHAR(50) NULL,
  `SUBNET_MASK` VARCHAR(50) NULL,
  `SUBNET` VARCHAR(50) NULL,
  `PROTOCOL_STATUS` VARCHAR(50) NULL,
  `ADMIN_STATUS` VARCHAR(50) NULL,
  `VLAN` VARCHAR(50) NULL,
  `INTERFACE_NAME` VARCHAR(50) NULL,
  `VLAN_NAME` VARCHAR(50) NULL,
  `VIRTUAL_IP` VARCHAR(50) NULL,
  `DESCRIPTION` VARCHAR(1000) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `MANAGEMENT_IP` VARCHAR(50) NULL,
  `SITE_TYPE` VARCHAR(50)  NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  PRIMARY KEY (`ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`cdn_table` (
  `TECHNOLOGY` VARCHAR(50) NOT NULL UNIQUE,
  `COUNT` INT NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  PRIMARY KEY (`TECHNOLOGY`));

SET time_zone = '+03:00';
CREATE TABLE IF NOT EXISTS `InventoryDB`.`power_feeds_table` (
  `POWER_ID` INT AUTO_INCREMENT NOT NULL,
  /*`RACK_ID` INT NOT NULL,
  `SITE_ID` VARCHAR(50) NOT NULL,*/
  `DEVICE_ID` VARCHAR(50) NOT NULL,
  `POWER_SOURCE_TYPE` VARCHAR(50)  NULL,
  `NUMBER_OF_POWER_SOURCES` VARCHAR(50)  NULL,
  `PSU1_FUSE` VARCHAR(50)  NULL,
  `PSU2_FUSE` VARCHAR(50)  NULL,
  `PSU3_FUSE` VARCHAR(50)  NULL,
  `PSU4_FUSE` VARCHAR(50)  NULL,
  `PSU5_FUSE` VARCHAR(50)  NULL,
  `PSU6_FUSE` VARCHAR(50)  NULL,
  `PSU1_PDU_DETAILS` VARCHAR(50)  NULL,
  `PSU2_PDU_DETAILS` VARCHAR(50)  NULL,
  `PSU3_PDU_DETAILS` VARCHAR(50)  NULL,
  `PSU4_PDU_DETAILS` VARCHAR(50)  NULL,
  `PSU5_PDU_DETAILS` VARCHAR(50)  NULL,
  `PSU6_PDU_DETAILS` VARCHAR(50)  NULL,
  `PSU1_DCDP_DETAILS` VARCHAR(50)  NULL,
  `PSU2_DCDP_DETAILS` VARCHAR(50)  NULL,
  `PSU3_DCDP_DETAILS` VARCHAR(50)  NULL,
  `PSU4_DCDP_DETAILS` VARCHAR(50)  NULL,
  `PSU5_DCDP_DETAILS` VARCHAR(50)  NULL,
  `PSU6_DCDP_DETAILS` VARCHAR(50)  NULL,
  `STATUS` VARCHAR(50)  NULL,
  /*`CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,*/
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  /*`FOREIGN KEY (SITE_ID) REFERENCES phy_table(SITE_ID),
  FOREIGN KEY (RACK_ID) REFERENCES rack_table(RACK_ID),*/
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  FOREIGN KEY (DEVICE_ID) REFERENCES device_table(DEVICE_ID),
  PRIMARY KEY (`POWER_ID`));


CREATE TABLE IF NOT EXISTS `InventoryDB`.`edn_dc_capacity` (
  `EDN_DC_CAPACITY_ID` INT AUTO_INCREMENT NOT NULL,
  `DEVICE_IP`  VARCHAR(50) NOT NULL,
  `SITE_ID` VARCHAR(50) NOT NULL,
  `DEVICE_ID` VARCHAR(50) NOT NULL,
  `OS_VERSION` VARCHAR(50) NOT NULL,
  `TOTAL_1G_PORTS` INT NULL,
  `TOTAL_10G_PORTS` INT NULL,
  `TOTAL_25G_PORTS` INT NULL,
  `TOTAL_40G_PORTS` INT NULL,
  `TOTAL_100G_PORTS` INT NULL,
  `TOTAL_FAST_ETHERNET_PORTS` INT NULL,
  `CONNECTED_1G` INT NULL,
  `CONNECTED_10G` INT NULL,
  `CONNECTED_25G` INT NULL,
  `CONNECTED_40G` INT NULL,
  `CONNECTED_100G` INT NULL,
  `CONNECTED_FAST_ETHERNET` INT NULL,
  `NOT_CONNECTED_1G` INT NULL,
  `NOT_CONNECTED_10G` INT NULL,
  `NOT_CONNECTED_25G` INT NULL,
  `NOT_CONNECTED_40G` INT NULL,
  `NOT_CONNECTED_100G` INT NULL,
  `NOT_CONNECTED_FAST_ETHERNET` INT NULL,
  `UNUSED_SFPS_1G` INT NULL,
  `UNUSED_SFPS_10G` INT NULL,
  `UNUSED_SFPS_25G` INT NULL,
  `UNUSED_SFPS_40G` INT NULL,
  `UNUSED_SFPS_100G` INT NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
   PRIMARY KEY (`EDN_DC_CAPACITY_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`igw_dc_capacity` (
  `IGW_DC_CAPACITY_ID` INT AUTO_INCREMENT NOT NULL,
  `DEVICE_IP`  VARCHAR(50) NOT NULL,
  `SITE_ID` VARCHAR(50) NOT NULL,
  `DEVICE_ID` VARCHAR(50) NOT NULL,
  `OS_VERSION` VARCHAR(50) NOT NULL,
  `TOTAL_1G_PORTS` INT NULL,
  `TOTAL_10G_PORTS` INT NULL,
  `TOTAL_25G_PORTS` INT NULL,
  `TOTAL_40G_PORTS` INT NULL,
  `TOTAL_100G_PORTS` INT NULL,
  `TOTAL_FAST_ETHERNET_PORTS` INT NULL,
  `CONNECTED_1G` INT NULL,
  `CONNECTED_10G` INT NULL,
  `CONNECTED_25G` INT NULL,
  `CONNECTED_40G` INT NULL,
  `CONNECTED_100G` INT NULL,
  `CONNECTED_FAST_ETHERNET` INT NULL,
  `NOT_CONNECTED_1G` INT NULL,
  `NOT_CONNECTED_10G` INT NULL,
  `NOT_CONNECTED_25G` INT NULL,
  `NOT_CONNECTED_40G` INT NULL,
  `NOT_CONNECTED_100G` INT NULL,
  `NOT_CONNECTED_FAST_ETHERNET` INT NULL,
  `UNUSED_SFPS_1G` INT NULL,
  `UNUSED_SFPS_10G` INT NULL,
  `UNUSED_SFPS_25G` INT NULL,
  `UNUSED_SFPS_40G` INT NULL,
  `UNUSED_SFPS_100G` INT NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
   PRIMARY KEY (`IGW_DC_CAPACITY_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`edn_exchange` (
  `EDN_EXCHANGE_ID` INT AUTO_INCREMENT NOT NULL,
  `DEVICE_IP`  VARCHAR(50) NOT NULL,
  `DEVICE_ID` VARCHAR(50) NOT NULL,
  `VRF_NAME` VARCHAR(50) NOT NULL,
  `RD` VARCHAR(50)  NULL,
  `INTERFACES` VARCHAR(500)  NULL,
  `IBGP_IP` VARCHAR(50)  NULL,
  `IBGP_AS` VARCHAR(50)  NULL,
  `IBGP_UP_TIME` VARCHAR(50)  NULL,
  `IBGP_PREFIX` VARCHAR(50)  NULL,
  `EBGP_IP` VARCHAR(50)  NULL,
  `EBGP_AS` VARCHAR(50)  NULL,
  `EBGP_UP_TIME` VARCHAR(50)  NULL,
  `EBGP_PREFIX` VARCHAR(50)  NULL,
  `EBGP_ADVERTISED_ROUTES` VARCHAR(3000)  NULL,
  `OWNER_NAME` VARCHAR(500) NULL,
  `OWNER_EMAIL` VARCHAR(500) NULL,
  `OWNER_CONTACT` VARCHAR(512) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `REGION` VARCHAR(50) NULL,
  `SITE_ID` VARCHAR(50) NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
   PRIMARY KEY (`EDN_EXCHANGE_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`edn_core_routing` (
  `EDN_CORE_ROUTING_ID` INT AUTO_INCREMENT NOT NULL,
  `DEVICE_IP`  VARCHAR(50) NOT NULL,
  `DEVICE_ID` VARCHAR(50) NOT NULL,
  `SUBNET` VARCHAR(100) NULL,
  `ROUTE_TYPE` VARCHAR(50)  NULL,
  `NEXT_HOP` VARCHAR(50)  NULL,
  `ORIGINATED_FROM_IP` VARCHAR(50)  NULL,
  `ORIGINATOR_NAME` VARCHAR(50)  NULL,
  `ROUTE_AGE` VARCHAR(50)  NULL,
  `PROCESS_ID` VARCHAR(50)  NULL,
  `COST` VARCHAR(50)  NULL,
  `OUT_GOING_INTERFACE` VARCHAR(50)  NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `REGION` VARCHAR(50) NULL,
  `SITE_ID` VARCHAR(50) NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
   PRIMARY KEY (`EDN_CORE_ROUTING_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`vrf_owners` (
  `VRF_OWNERS_ID` INT AUTO_INCREMENT NOT NULL,
  `VRF_NAME` VARCHAR(50) UNIQUE NOT NULL,
  `OWNER_NAME` VARCHAR(500) NULL,
  `OWNER_EMAIL` VARCHAR(500) NULL,
  `OWNER_CONTACT` VARCHAR(512) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
   PRIMARY KEY (`VRF_OWNERS_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`vrf_routes` (
  `VRF_ROUTE_ID` INT AUTO_INCREMENT NOT NULL,
  `DEVICE_IP`  VARCHAR(50) NOT NULL,
  `DEVICE_ID` VARCHAR(50) NOT NULL,
  `VRF_NAME` VARCHAR(50) NOT NULL,
  `ROUTE` VARCHAR(500) NULL,
  `NEXT_HOP` VARCHAR(500) NULL,
  `AS_PATH` VARCHAR(512) NULL,
  `ORIGIN` VARCHAR(50) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
   PRIMARY KEY (`VRF_ROUTE_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`access_points_table` (
  `ACCESS_POINT_ID` INT AUTO_INCREMENT NOT NULL,
  `DEVICE_ID` VARCHAR(50)  NULL,
  `WLC_NAME` VARCHAR(50) NOT NULL,
  `SITE_ID` VARCHAR(50)  NULL,
  `NE_IP_ADDRESS` VARCHAR(50) NOT NULL,
  `SOFTWARE_VERSION` VARCHAR(50) NULL,
  `PATCH_VERSION` VARCHAR(50) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  `STATUS` VARCHAR(50) NULL,
  `RU` INT NULL,
  `DEPARTMENT` VARCHAR(50) NULL,
  `SECTION` VARCHAR(50) NULL,
  `CRITICALITY` VARCHAR(20) NULL,
  `FUNCTION` VARCHAR(50) NULL,
  `CISCO_DOMAIN` VARCHAR(50) NULL,
  `DOMAIN` VARCHAR(50) NULL,
  `MANUFACTURER` VARCHAR(50) NULL,
  `HW_EOS_DATE` DATE NULL,
  `HW_EOL_DATE` DATE NULL,
  `SW_EOS_DATE` DATE NULL,
  `SW_EOL_DATE` DATE NULL,
  `VIRTUAL` VARCHAR(20) NULL,
  `RFS_DATE` DATE NULL,
  `AUTHENTICATION` VARCHAR(10) NULL,
  `SERIAL_NUMBER` VARCHAR(50) NULL,
  `PN_CODE` VARCHAR(50) NULL,
  `TAG_ID` VARCHAR(50) NULL,
  `SUBRACK_ID_NUMBER` VARCHAR(50) NULL,
  `MANUFACTUER_DATE` DATE NULL,
  `HARDWARE_VERSION` VARCHAR(50) NULL,
  `MAX_POWER` VARCHAR(50) NULL,
  `DEVICE_NAME` VARCHAR(150) NULL,
  `SITE_TYPE` VARCHAR(50) NULL,
  `SOURCE` VARCHAR(50) NULL,
  `STACK` VARCHAR(50) NULL,
  `CONTRACT_NUMBER` VARCHAR(50) NULL,
  `CONTRACT_EXPIRY` DATE NULL,
  `ITEM_CODE` VARCHAR(50) NULL,
  `ITEM_DESC` VARCHAR(250) NULL,
  `CLEI` VARCHAR(50) NULL,
  `IMS_STATUS` VARCHAR(50) NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  PRIMARY KEY (`ACCESS_POINT_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`inventory_scripts_status` (
  `ID` INT AUTO_INCREMENT NOT NULL,
  `SCRIPT` VARCHAR(50) UNIQUE NOT NULL,
  `STATUS` VARCHAR(50) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  PRIMARY KEY (`ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`rebd_table` (
  `REBD_ID` INT AUTO_INCREMENT NOT NULL,
  `SITE_ID` VARCHAR(50)  NULL,
  `REGION` VARCHAR(50) NULL,
  `LONGITUDE` VARCHAR(50) NULL,
  `LATITUDE` VARCHAR(50) NULL,
  `CITY` VARCHAR(50) NULL,
  `SERIAL_NUMBER` VARCHAR(50) NULL,
  `PN_CODE` VARCHAR(50) NULL,
  `FLOOR` VARCHAR(50) NULL,
  `RACK_ID` VARCHAR(50) NULL,
  `RFS_DATE` DATE NULL,
  `TAG_ID` VARCHAR(50) NULL,
  `DEVICE_ID` VARCHAR(50),
  `NE_IP_ADDRESS` VARCHAR(50) NOT NULL UNIQUE,
  `DEVICE_RU` INT NULL,
  `DEPARTMENT` VARCHAR(50) NULL,
  `SECTION` VARCHAR(50) NULL,
  `CRITICALITY` VARCHAR(20) NULL,
  `FUNCTION` VARCHAR(50) NULL,
  `DOMAIN` VARCHAR(50) NULL,
  `VIRTUAL` VARCHAR(20) NULL,
  `AUTHENTICATION` VARCHAR(20) NULL,
  `HOSTNAME` VARCHAR(50) NULL,
  `SW_TYPE` VARCHAR(50) NULL,
  `VENDOR` VARCHAR(50) NULL,
  `OPERATION_STATUS` VARCHAR(50) NULL,
  `SITE_TYPE` VARCHAR(50) NULL,
  `CONTRACT_NUMBER` VARCHAR(50) NULL,
  `CONTRACT_EXPIRY` DATE NULL,
  `STACK` INT NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  PRIMARY KEY (`REBD_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`pos_table` (
  `POS_ID` INT AUTO_INCREMENT NOT NULL,
  `SITE_ID` VARCHAR(50)  NULL,
  `RACK_ID` VARCHAR(50) NULL,
  `REGION` VARCHAR(50) NULL,
  `LATITUDE` VARCHAR(50) NULL,
  `LONGITUDE` VARCHAR(50) NULL,
  `CITY` VARCHAR(50) NULL,
  `FLOOR` VARCHAR(50) NULL,
  `SERIAL_NUMBER` VARCHAR(50) NULL,
  `PN_CODE` VARCHAR(50) NULL,
  `RFS_DATE` DATE NULL,
  `TAG_ID` VARCHAR(50) NULL,
  `DEVICE_ID` VARCHAR(50),
  `NE_IP_ADDRESS` VARCHAR(50) NOT NULL UNIQUE,
  `DEVICE_RU` INT NULL,
  `DEPARTMENT` VARCHAR(50) NULL,
  `SECTION` VARCHAR(50) NULL,
  `CRITICALITY` VARCHAR(20) NULL,
  `FUNCTION` VARCHAR(50) NULL,
  `DOMAIN` VARCHAR(50) NULL,
  `VIRTUAL` VARCHAR(20) NULL,
  `AUTHENTICATION` VARCHAR(20) NULL,
  `HOSTNAME` VARCHAR(50) NULL,
  `SW_TYPE` VARCHAR(50) NULL,
  `VENDOR` VARCHAR(50) NULL,
  `OPERATION_STATUS` VARCHAR(50) NULL,
  `SITE_TYPE` VARCHAR(50) NULL,
  `CONTRACT_NUMBER` VARCHAR(50) NULL,
  `CONTRACT_EXPIRY` DATE NULL,
  `STACK` INT NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  PRIMARY KEY (`POS_ID`));

  CREATE TABLE IF NOT EXISTS `InventoryDB`.`functions_table` (
    `FUNCTION_ID` INT AUTO_INCREMENT NOT NULL,
    `TFUN` VARCHAR(50) UNIQUE NOT NULL,
    `FUNCTION` VARCHAR(500) NULL,
    `CREATION_DATE` DATETIME NULL,
    `MODIFICATION_DATE` DATETIME NULL,
    `CREATED_BY` VARCHAR(50) NULL,
    `MODIFIED_BY` VARCHAR(50) NULL,
    PRIMARY KEY (`FUNCTION_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`edn_ios_tracker` (
    `ID` INT NOT NULL AUTO_INCREMENT UNIQUE,
    `DEVICE_ID` VARCHAR(50) NOT NULL UNIQUE,  
    `IP_ADDRESS` VARCHAR(50) NOT NULL UNIQUE,
    `SITE_ID` VARCHAR(50) NOT NULL,
    `REGION` VARCHAR(50) NOT NULL,
    `PID` VARCHAR(50) NOT NULL,
    `OS_TYPE` VARCHAR(50) NOT NULL,
    `CURRENT_OS_VERSION` VARCHAR(50) NOT NULL,
    `NEW_OS_VERSION` VARCHAR(50) NOT NULL,
    `ASSIGNEE` VARCHAR(50) NOT NULL,
    `SCHEDULE` DATE NULL,
    `STATUS` VARCHAR(50) NULL,
    `CRQ` VARCHAR(50) NULL,
    `REMARKS` VARCHAR(50) NULL,
    `CREATION_DATE` DATETIME NULL,
    `MODIFICATION_DATE` DATETIME NULL,
    `CREATED_BY` VARCHAR(50) NULL,
    `MODIFIED_BY` VARCHAR(50) NULL,
    
    PRIMARY KEY (`DEVICE_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`edn_cmdb_tracker` (
    `ID` INT NOT NULL AUTO_INCREMENT,
    `CRQ_NO` VARCHAR(50) NOT NULL,
    `ACTIVITY_SUMMARY` VARCHAR(100) NULL,
    `ACTIVITY_TYPE` TEXT NULL,
    `APPROVAL_TYPE` TEXT NULL,
    `PRIORITY` VARCHAR(50) NULL,
    `IMPLEMENTING_TEAM` TEXT NULL,
    `IMPLEMENTER` TEXT NULL,
    `REGION` TEXT NULL,
    `SITE` VARCHAR(100) NULL,
    `DATE` DATETIME NULL,
    `STATUS` VARCHAR(50) NULL,
    `SERVICE_IMPACT` VARCHAR(100) NULL,
    `DOMAIN` TEXT NULL,
    `ACTIVITY_CATEGORY` TEXT NULL,
    `CI` VARCHAR(100) NULL,
    `REASON_OF_ROLLBACK` VARCHAR(500) NULL,
    `CREATION_DATE` DATETIME NULL,
    `MODIFICATION_DATE` DATETIME NULL,
    `CREATED_BY` VARCHAR(50) NULL,
    `MODIFIED_BY` VARCHAR(50) NULL,
    PRIMARY KEY (`ID`),
    UNIQUE KEY (`CRQ_NO`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`edn_device_poweroff_tracker` (
  `POWEROFF_TRACKER_ID` INT NOT NULL AUTO_INCREMENT UNIQUE,
  `CRQ_NO` VARCHAR(200) NOT NULL,
  `IP_ADDRESS` VARCHAR(100) NOT NULL UNIQUE,
  `DEVICE_ID` VARCHAR(50) NOT NULL,
  `TAG_ID` VARCHAR(50) NULL,
  `SERIAL_NO` VARCHAR(50) NULL,
  `FUNCTION` VARCHAR(50) NULL,
  `PN_CODE` VARCHAR(50) NULL,
  `COMMENTS` VARCHAR(500) NULL,
  `OS_TYPE` VARCHAR(50) NULL,
  `REGION` VARCHAR(50) NULL,
  `CITY` VARCHAR(50) NULL,
  `SITE_NAME` VARCHAR(50) NULL,
  `RACK_NAME` VARCHAR(50) NULL,
  `DATE_OF_POWER_DOWN` DATE NOT NULL,
  `DATE_OF_POWER_ON` DATE NULL,
  `ASSIGNED_TO` VARCHAR(500) NULL,
  `ASSOCIATED_CIRCUIT_ID_DETAILS` VARCHAR(500) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
    
  PRIMARY KEY (`POWEROFF_TRACKER_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`edn_handback_tracker` (
  `HANDBACK_TRACKER_ID` INT NOT NULL AUTO_INCREMENT UNIQUE,
  `CRQ_NO` VARCHAR(200) NOT NULL,
  `IP_ADDRESS` VARCHAR(100) NOT NULL UNIQUE,
  `DEVICE_ID` VARCHAR(50) NOT NULL,
  `TAG_ID` VARCHAR(50) NULL,
  `REGION` VARCHAR(50) NULL,
  `SITE_TYPE` VARCHAR(50) NULL,
  `FUNCTION` VARCHAR(50) NULL,
  `PN_CODE` VARCHAR(50) NULL,
  `SERIAL_NO` VARCHAR(50) NULL,
  `ASSIGNED_TO` VARCHAR(50) NOT NULL,
  `HANDBACK_SUBMISSION_DATE` DATE NOT NULL,
  `HANDBACK_COMPLETION_DATE` DATE NULL,
  `HANDBACK_STATUS` VARCHAR(50) NOT NULL,
  `IP_DECOMISSIONING_CRQ` VARCHAR(100) NULL,
  `PROJECT_REPRESENTATIVE` VARCHAR(100) NULL,
  `PO_NO` VARCHAR(100) NULL,
  `CONFIGURATION_CLEANUP_STATUS` VARCHAR(50) NOT NULL,
  `EXTRA_OLD_DEVICES` VARCHAR(1000) NULL,
  `ASSOCIATED_CIRCUIT_ID_DETAILS` VARCHAR(100) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,

  PRIMARY KEY (`HANDBACK_TRACKER_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`edn_handover_tracker` (
  `HANDOVER_TRACKER_ID` INT NOT NULL AUTO_INCREMENT UNIQUE,
  `IP_ADDRESS` VARCHAR(50) NOT NULL UNIQUE,
  `DEVICE_ID` VARCHAR(50) NULL,
  `PROJECT_TYPE` VARCHAR(50) NULL,
  `REGION` VARCHAR(50) NULL,
  `SITE_TYPE` VARCHAR(50) NULL,
  `ASSET_TYPE` VARCHAR(50) NULL,
  `PN_CODE` VARCHAR(50) NULL,
  `SERIAL_NO` VARCHAR(50) NULL,
  `ASSIGNED_TO` VARCHAR(50) NOT NULL,
  `HANDOVER_SUBMISSION_DATE` DATE NOT NULL,
  `HANDOVER_COMPLETION_DATE` DATE NULL,
  `HANDOVER_REVIEW_STATUS` VARCHAR(50) NOT NULL,
  `REMEDY_INCIDENT` VARCHAR(100) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  `HISTORY` TEXT NULL,
  `COMMENT_HISTORY` TEXT NULL,
  `ONBOARD_STATUS` VARCHAR(50) NULL,
  `PRIMARY_HANDOVER_ID` VARCHAR(50) NULL,
  PRIMARY KEY (`HANDOVER_TRACKER_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`ip_assignment_tracker` (
    `IP_ASSIGNMENT_TRACKER_ID` INT NOT NULL AUTO_INCREMENT UNIQUE,
    `EMPLOYEE_PF` VARCHAR(50) NULL,  
    `FULL_NAME` VARCHAR(50) NULL,
    `ORGANIZATION` VARCHAR(50) NULL,
    `POSITION` VARCHAR(50) NULL,
    `GRADE` VARCHAR(50) NULL,
    `EMAIL` VARCHAR(50) NULL,
    `IP_PHONE_MODEL` VARCHAR(50) NULL,
    `SERIAL_NO` VARCHAR(50) NULL,
    `MAC` VARCHAR(50) NULL,
    `DATE_OF_DEVICE_ASSIGNMENT` DATE NULL,
    `REGION` VARCHAR(50) NULL,
    `REGISTRATION_STATUS` VARCHAR(50) NULL,
    `ASSIGNED_BY` VARCHAR(500) NULL,
    `MOBILE_NUMBER` VARCHAR(100) NULL,
    `CREATION_DATE` DATETIME NULL,
    `MODIFICATION_DATE` DATETIME NULL,
    `CREATED_BY` VARCHAR(50) NULL,
    `MODIFIED_BY` VARCHAR(50) NULL,
    PRIMARY KEY (`IP_ASSIGNMENT_TRACKER_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`ip_clearance_tracker` (
    `IP_CLEARANCE_TRACKER_ID` INT NOT NULL AUTO_INCREMENT UNIQUE,
    `EMPLOYEE_PF` VARCHAR(50) NULL,  
    `FULL_NAME` VARCHAR(50) NULL,
    `ORGANIZATION` VARCHAR(50) NULL,
    `POSITION` VARCHAR(50) NULL,
    `JOB` VARCHAR(50) NULL,
    `GRADE` VARCHAR(50) NULL,
    `NATIONALITY` VARCHAR(50) NULL,
    `TERMINATION_DATE` DATE NULL,
    `EMAIL` VARCHAR(50) NULL,
    `IPT_TEAM_ASSIGNEE` VARCHAR(50) NULL,
    `IP_PHONE_MODEL` VARCHAR(50) NULL,
    `SERIAL_NO` VARCHAR(50) NULL,
    `MAC` VARCHAR(50) NULL,
    `COLLECTION_DATE` DATE NULL,
    `REGION` VARCHAR(50) NULL,
    `STATUS` VARCHAR(50) NULL,
    `REMARKS` VARCHAR(50) NULL,
    `CREATION_DATE` DATETIME NULL,
    `MODIFICATION_DATE` DATETIME NULL,
    `CREATED_BY` VARCHAR(50) NULL,
    `MODIFIED_BY` VARCHAR(50) NULL,

    PRIMARY KEY (`IP_CLEARANCE_TRACKER_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`edn_pmr_tracker` (
    `EDN_PMR_TRACKER_ID` INT NOT NULL AUTO_INCREMENT UNIQUE,
    `DEVICE_ID` VARCHAR(50) NULL,  
    `IP_ADDRESS` VARCHAR(50) NULL,
    `SERIAL_NUMBER` VARCHAR(50) NULL,
    `VENDOR` VARCHAR(50) NULL,
    `MODEL` VARCHAR(50) NULL,
    `CRITICALITY` VARCHAR(50) NULL,
    `DOMAIN` VARCHAR(50) NULL,
    `VIRTUAL` VARCHAR(50) NULL,
    `DEVICE_STATUS` VARCHAR(500) NULL,
    `DEVICE_REMARKS` VARCHAR(500) NULL,
    `SITE_ID` VARCHAR(50) NULL,
    `SITE_TYPE` VARCHAR(50) NULL,
    `LATITUDE` VARCHAR(50) NULL,
    `LONGITUDE` VARCHAR(50) NULL,
    `CITY` VARCHAR(50) NULL,
    `REGION` VARCHAR(50) NULL,
    `RACK_ID` VARCHAR(50) NULL,
    `RACK_NAME` VARCHAR(50) NULL,
    `PMR_QUARTER` VARCHAR(500) NULL,
    `PMR_CRQ` VARCHAR(500) NULL,
    `PMR_DATE` DATE NULL,
    `PMR_STATUS` VARCHAR(500) NULL,
    `PMR_REMARKS` VARCHAR(500) NULL,
    `DOOR_LOCKS_STATUS` VARCHAR(500) NULL,
    `LABELS_STATUS` VARCHAR(500) NULL,
    `PMR_CORRECTIVE_ACTIONS` VARCHAR(500) NULL,
    `CREATION_DATE` DATETIME NULL,
    `MODIFICATION_DATE` DATETIME NULL,
    `CREATED_BY` VARCHAR(50) NULL,
    `MODIFIED_BY` VARCHAR(50) NULL,
        
    PRIMARY KEY (`EDN_PMR_TRACKER_ID`));

  CREATE TABLE IF NOT EXISTS `InventoryDB`.`domains_table` (
    `DOMAIN_ID` INT AUTO_INCREMENT NOT NULL,
    `CISCO_DOMAIN` VARCHAR(50) UNIQUE NOT NULL,
    `DEPARTMENT` VARCHAR(100)  NOT NULL,
    `SECTION` VARCHAR(100) NULL,
    `CREATION_DATE` DATETIME NULL,
    `MODIFICATION_DATE` DATETIME NULL,
    `CREATED_BY` VARCHAR(50) NULL,
    `MODIFIED_BY` VARCHAR(50) NULL,
    PRIMARY KEY (`DOMAIN_ID`));

  CREATE TABLE IF NOT EXISTS `InventoryDB`.`failed_devices_edn_ipam` (
    `EDN_IPAM_FAILED_ID` INT AUTO_INCREMENT NOT NULL,
    `IP_ADDRESS` VARCHAR(50)  NOT NULL,
    `DEVICE_ID` VARCHAR(50)  NOT NULL,
    `REASON` VARCHAR(500) NULL,
    `DATE` DATETIME NULL,
    PRIMARY KEY (`EDN_IPAM_FAILED_ID`));

   CREATE TABLE IF NOT EXISTS `InventoryDB`.`failed_devices_igw_ipam` (
    `IGW_IPAM_FAILED_ID` INT AUTO_INCREMENT NOT NULL,
    `IP_ADDRESS` VARCHAR(50)  NOT NULL,
    `DEVICE_ID` VARCHAR(50)  NOT NULL,
    `REASON` VARCHAR(500) NULL,
    `DATE` DATETIME NULL,
    PRIMARY KEY (`IGW_IPAM_FAILED_ID`));

  CREATE TABLE IF NOT EXISTS `InventoryDB`.`failed_devices_soc_ipam` (
    `SOC_IPAM_FAILED_ID` INT AUTO_INCREMENT NOT NULL,
    `IP_ADDRESS` VARCHAR(50)  NOT NULL,
    `DEVICE_ID` VARCHAR(50)  NOT NULL,
    `REASON` VARCHAR(500) NULL,
    `DATE` DATETIME NULL,
    PRIMARY KEY (`SOC_IPAM_FAILED_ID`));
  
   CREATE TABLE IF NOT EXISTS `InventoryDB`.`failed_devices_edn_dc_capacity` (
    `EDN_DC_CAPACITY_FAILED_ID` INT AUTO_INCREMENT NOT NULL,
    `IP_ADDRESS` VARCHAR(50)  NOT NULL,
    `DEVICE_ID` VARCHAR(50)  NOT NULL,
    `REASON` VARCHAR(500) NULL,
    `DATE` DATETIME NULL,
    PRIMARY KEY (`EDN_DC_CAPACITY_FAILED_ID`));

   CREATE TABLE IF NOT EXISTS `InventoryDB`.`failed_devices_igw_dc_capacity` (
    `IGW_DC_CAPACITY_FAILED_ID` INT AUTO_INCREMENT NOT NULL,
    `IP_ADDRESS` VARCHAR(50)  NOT NULL,
    `DEVICE_ID` VARCHAR(50)  NOT NULL,
    `REASON` VARCHAR(500) NULL,
    `DATE` DATETIME NULL,
    PRIMARY KEY (`IGW_DC_CAPACITY_FAILED_ID`));

   CREATE TABLE IF NOT EXISTS `InventoryDB`.`failed_devices_access_points` (
    `ACCESS_POINTS_FAILED_ID` INT AUTO_INCREMENT NOT NULL,
    `IP_ADDRESS` VARCHAR(50)  NOT NULL,
    `DEVICE_ID` VARCHAR(50)  NOT NULL,
    `REASON` VARCHAR(500) NULL,
    `DATE` DATETIME NULL,
    PRIMARY KEY (`ACCESS_POINTS_FAILED_ID`));
  
   CREATE TABLE IF NOT EXISTS `InventoryDB`.`failed_devices_ipt_endpoints` (
    `IPT_ENDPOINTS_FAILED_ID` INT AUTO_INCREMENT NOT NULL,
    `IP_ADDRESS` VARCHAR(50)  NOT NULL,
    `DEVICE_ID` VARCHAR(50)  NOT NULL,
    `REASON` VARCHAR(500) NULL,
    `DATE` DATETIME NULL,
    PRIMARY KEY (`IPT_ENDPOINTS_FAILED_ID`));
  
  CREATE TABLE IF NOT EXISTS `InventoryDB`.`failed_devices_edn_exchange` (
    `EDN_EXCHANGE_FAILED_ID` INT AUTO_INCREMENT NOT NULL,
    `IP_ADDRESS` VARCHAR(50)  NOT NULL,
    `DEVICE_ID` VARCHAR(50)  NOT NULL,
    `REASON` VARCHAR(500) NULL,
    `DATE` DATETIME NULL,
    PRIMARY KEY (`EDN_EXCHANGE_FAILED_ID`));
  
   CREATE TABLE IF NOT EXISTS `InventoryDB`.`failed_devices_edn_lldp` (
    `EDN_LLDP_FAILED_ID` INT AUTO_INCREMENT NOT NULL,
    `IP_ADDRESS` VARCHAR(50)  NOT NULL,
    `DEVICE_ID` VARCHAR(50)  NOT NULL,
    `REASON` VARCHAR(500) NULL,
    `DATE` DATETIME NULL,
    PRIMARY KEY (`EDN_LLDP_FAILED_ID`));

   CREATE TABLE IF NOT EXISTS `InventoryDB`.`failed_devices_igw_lldp` (
    `IGW_LLDP_FAILED_ID` INT AUTO_INCREMENT NOT NULL,
    `IP_ADDRESS` VARCHAR(50)  NOT NULL,
    `DEVICE_ID` VARCHAR(50)  NOT NULL,
    `REASON` VARCHAR(500) NULL,
    `DATE` DATETIME NULL,
    PRIMARY KEY (`IGW_LLDP_FAILED_ID`));

   CREATE TABLE IF NOT EXISTS `InventoryDB`.`failed_devices_edn_cdp` (
    `EDN_CDP_FAILED_ID` INT AUTO_INCREMENT NOT NULL,
    `IP_ADDRESS` VARCHAR(50)  NOT NULL,
    `DEVICE_ID` VARCHAR(50)  NOT NULL,
    `REASON` VARCHAR(500) NULL,
    `DATE` DATETIME NULL,
    PRIMARY KEY (`EDN_CDP_FAILED_ID`));

   CREATE TABLE IF NOT EXISTS `InventoryDB`.`failed_devices_igw_cdp` (
    `IGW_CDP_FAILED_ID` INT AUTO_INCREMENT NOT NULL,
    `IP_ADDRESS` VARCHAR(50)  NOT NULL,
    `DEVICE_ID` VARCHAR(50)  NOT NULL,
    `REASON` VARCHAR(500) NULL,
    `DATE` DATETIME NULL,
    PRIMARY KEY (`IGW_CDP_FAILED_ID`));
  
  CREATE TABLE IF NOT EXISTS `InventoryDB`.`failed_devices_edn_mac` (
    `EDN_MAC_FAILED_ID` INT AUTO_INCREMENT NOT NULL,
    `IP_ADDRESS` VARCHAR(50)  NOT NULL,
    `DEVICE_ID` VARCHAR(50)  NOT NULL,
    `REASON` VARCHAR(500) NULL,
    `DATE` DATETIME NULL,
    PRIMARY KEY (`EDN_MAC_FAILED_ID`));

   CREATE TABLE IF NOT EXISTS `InventoryDB`.`failed_devices_igw_mac` (
    `IGW_MAC_FAILED_ID` INT AUTO_INCREMENT NOT NULL,
    `IP_ADDRESS` VARCHAR(50)  NOT NULL,
    `DEVICE_ID` VARCHAR(50)  NOT NULL,
    `REASON` VARCHAR(500) NULL,
    `DATE` DATETIME NULL,
    PRIMARY KEY (`IGW_MAC_FAILED_ID`));
  
   CREATE TABLE IF NOT EXISTS `InventoryDB`.`failed_devices_edn_firewall` (
    `EDN_Firewall_FAILED_ID` INT AUTO_INCREMENT NOT NULL,
    `IP_ADDRESS` VARCHAR(50)  NOT NULL,
    `DEVICE_ID` VARCHAR(50)  NOT NULL,
    `REASON` VARCHAR(500) NULL,
    `DATE` DATETIME NULL,
    PRIMARY KEY (`EDN_Firewall_FAILED_ID`));

    CREATE TABLE IF NOT EXISTS `InventoryDB`.`failed_devices_f5` (
    `F5_FAILED_ID` INT AUTO_INCREMENT NOT NULL,
    `IP_ADDRESS` VARCHAR(50)  NOT NULL,
    `DEVICE_ID` VARCHAR(50)  NOT NULL,
    `REASON` VARCHAR(500) NULL,
    `DATE` DATETIME NULL,
    PRIMARY KEY (`F5_FAILED_ID`));

/*
CREATE TABLE IF NOT EXISTS `InventoryDB`.`vulnerability_managedby` (
    `VULNERABILITY_MANAGEDBY_ID` INT NOT NULL AUTO_INCREMENT UNIQUE,
    `SCAN_RESULT_ID` VARCHAR(1000) NOT NULL,  
    `DEVICE_IP` VARCHAR(1000) NULL,
    `DEVICE_NAME` VARCHAR(1000) NULL,
    `TITLE` VARCHAR(1000) NULL,
    `DUE_DATE` DATE NULL,
    `FALSE_POSITIVE_STATUS` VARCHAR(1000) NULL,
    `SEVERITY` VARCHAR(1000) NULL,
    `TECHNICAL_CONTACT` VARCHAR(1000) NULL,
    `DESCRIPTION` TEXT NULL,
    `CVE_ID` VARCHAR(1000) NULL,
    `DEVICE_VENDOR` VARCHAR(1000) NULL,
    `EXCEPTION_EXPIRY_DATE` DATE NULL,
    `GRC_TEAM_COMMENTS` VARCHAR(1000) NULL,
    `GRC_TEAM_VALIDATION_RESPONSE` VARCHAR(1000) NULL,
    `REMEDIATION_COMMENTS` VARCHAR(1000) NULL,
    `VULNERABILITY_ID` VARCHAR(1000) NULL,
    `VENDOR_REFERENCE` VARCHAR(1000) NULL,
    `VULNERABILITY_DETAILS` VARCHAR(1000) NULL,
    `CREATION_DATE` DATETIME NULL,
    `MODIFICATION_DATE` DATETIME NULL,
    `CREATED_BY` VARCHAR(50) NULL,
    `MODIFIED_BY` VARCHAR(50) NULL,

    PRIMARY KEY (`VULNERABILITY_MANAGEDBY_ID`)
);
*/
CREATE TABLE IF NOT EXISTS `InventoryDB`.`vulnerability_edn_master` (
    `VULNERABILITY_MASTER_ID` INT NOT NULL AUTO_INCREMENT UNIQUE,
    `SCAN_RESULT_ID` VARCHAR(1000) NOT NULL,  
    `DEVICE_IP` VARCHAR(1000) NULL,
    `DEVICE_NAME` VARCHAR(1000) NULL,
    `SEVERITY` VARCHAR(1000) NULL,
    `CVE_ID` VARCHAR(1000) NULL,
    `DUE_DATE` DATE NULL,
    `LAST_DETECTED` DATE NULL,
    `OVERALL_STATUS` VARCHAR(1000) NULL,
    `QUALYS_VULN_STATUS` VARCHAR(1000) NULL,
    /*`INPROGRESS_EXCEPTIONS` VARCHAR(1000) NULL,*/
    `ALL_EXCEPTIONS` VARCHAR(1000) NULL,
    `PN_CODE` VARCHAR(1000) NULL,
    `HW_EOS_DATE` DATE NULL,
    `VULN_FIX_PLAN_STATUS` VARCHAR(1000) NULL,
    `VULN_OPS_SEVERITY` VARCHAR(1000) NULL,
    `TECHNICAL_CONTACT` VARCHAR(1000) NULL,
    `CREATION_DATE` DATETIME NULL,
    `MODIFICATION_DATE` DATETIME NULL,
    `CREATED_BY` VARCHAR(50) NULL,
    `MODIFIED_BY` VARCHAR(50) NULL,

    PRIMARY KEY (`VULNERABILITY_MASTER_ID`));


CREATE TABLE IF NOT EXISTS `InventoryDB`.`vulnerability_edn_no_plan` (
    `VULNERABILITY_No_PLAN_ID` INT NOT NULL AUTO_INCREMENT UNIQUE, 
    `DEVICE_IP` VARCHAR(1000) NULL,
    `DEVICE_NAME` VARCHAR(1000) NULL,
    `PN_CODE` VARCHAR(1000) NULL,
    `CREATION_DATE` DATETIME NULL,
    `MODIFICATION_DATE` DATETIME NULL,
    `CREATED_BY` VARCHAR(50) NULL,
    `MODIFIED_BY` VARCHAR(50) NULL,

    PRIMARY KEY (`VULNERABILITY_No_PLAN_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`vulnerability_edn_not_found` (
    `VULNERABILITY_NOT_FOUND_ID` INT NOT NULL AUTO_INCREMENT UNIQUE, 
    `DEVICE_IP` VARCHAR(1000) NULL,
    `DEVICE_NAME` VARCHAR(1000) NULL,
    `CORRECT_DEVICE_ID` VARCHAR(1000) NULL,
    `CREATION_DATE` DATETIME NULL,
    `MODIFICATION_DATE` DATETIME NULL,
    `CREATED_BY` VARCHAR(50) NULL,
    `MODIFIED_BY` VARCHAR(50) NULL,

    PRIMARY KEY (`VULNERABILITY_NOT_FOUND_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`vulnerability_edn_archer` (
    `VULNERABILITY_ARCHER_ID` INT NOT NULL AUTO_INCREMENT UNIQUE,
    `SCAN_RESULT_ID` VARCHAR(1000) NOT NULL ,   
    `DEVICE_IP` VARCHAR(1000) NULL,
    `DEVICE_NAME` VARCHAR(1000) NULL,
    `TITLE` VARCHAR(1000) NULL,
    `DUE_DATE` DATE NULL,
    `FALSE_POSITIVE_DATE` DATE NULL,
    `SEVERITY` VARCHAR(1000) NULL,
    `OVERALL_STATUS` VARCHAR(1000) NULL,
    `QUALYS_VULN_STATUS` VARCHAR(1000) NULL,
    `LAST_DETECTED` DATE NULL,
    `TECHNICAL_CONTACT` VARCHAR(1000) NULL,
    `EXCEPTION_REQUESTS` VARCHAR(1000) NULL,
    `CVE_ID` VARCHAR(1000) NULL,
    `CREATION_DATE` DATETIME NULL,
    `MODIFICATION_DATE` DATETIME NULL,
    `CREATED_BY` VARCHAR(50) NULL,
    `MODIFIED_BY` VARCHAR(50) NULL,
    
    PRIMARY KEY (`VULNERABILITY_ARCHER_ID`));

/*
CREATE TABLE IF NOT EXISTS `InventoryDB`.`vulnerability_open` (
    `VULNERABILITY_OPEN_ID` INT NOT NULL AUTO_INCREMENT UNIQUE,
    `SCAN_RESULT_ID` VARCHAR(1000) NOT NULL ,   
    `DEVICE_IP` VARCHAR(1000) NULL,
    `DEVICE_NAME` VARCHAR(1000) NULL,
    `TITLE` VARCHAR(1000) NULL,
    `DUE_DATE` DATE NULL,
    `FALSE_POSITIVE_DATE` DATE NULL,
    `SEVERITY` VARCHAR(1000) NULL,
    `OVERALL_STATUS` VARCHAR(1000) NULL,
    `QUALYS_VULN_STATUS` VARCHAR(1000) NULL,
    `LAST_DETECTED` DATE NULL,
    `TECHNICAL_CONTACT` VARCHAR(1000) NULL,
    `EXCEPTION_REQUESTS` VARCHAR(1000) NULL,
    `CREATION_DATE` DATETIME NULL,
    `MODIFICATION_DATE` DATETIME NULL,
    `CREATED_BY` VARCHAR(50) NULL,
    `MODIFIED_BY` VARCHAR(50) NULL,

    PRIMARY KEY (`VULNERABILITY_OPEN_ID`));

				 				
CREATE TABLE IF NOT EXISTS `InventoryDB`.`vulnerability_inprogress` (
    `VULNERABILITY_INPROGRESS_ID` INT NOT NULL AUTO_INCREMENT UNIQUE,
    `SCAN_RESULT_ID` VARCHAR(1000) NOT NULL ,   
    `DEVICE_IP` VARCHAR(1000) NULL,
    `DEVICE_NAME` VARCHAR(1000) NULL,
    `TITLE` VARCHAR(1000) NULL,
    `DUE_DATE` DATE NULL,
    `FALSE_POSITIVE_DATE` DATE NULL,
    `SEVERITY` VARCHAR(1000) NULL,
    `OVERALL_STATUS` VARCHAR(1000) NULL,
    `QUALYS_VULN_STATUS` VARCHAR(1000) NULL,
    `LAST_DETECTED` DATE NULL,
    `TECHNICAL_CONTACT` VARCHAR(1000) NULL,
    `EXCEPTION_REQUESTS` VARCHAR(1000) NULL,
    `CREATION_DATE` DATETIME NULL,
    `MODIFICATION_DATE` DATETIME NULL,
    `CREATED_BY` VARCHAR(50) NULL,
    `MODIFIED_BY` VARCHAR(50) NULL,
    
    PRIMARY KEY (`VULNERABILITY_INPROGRESS_ID`));


CREATE TABLE IF NOT EXISTS `InventoryDB`.`vulnerability_overdue` (
    `VULNERABILITY_OVERDUE_ID` INT NOT NULL AUTO_INCREMENT UNIQUE,
    `SCAN_RESULT_ID` VARCHAR(1000) NOT NULL ,   
    `DEVICE_IP` VARCHAR(1000) NULL,
    `DEVICE_NAME` VARCHAR(1000) NULL,
    `TITLE` VARCHAR(1000) NULL,
    `DUE_DATE` DATE NULL,
    `FALSE_POSITIVE_DATE` DATE NULL,
    `SEVERITY` VARCHAR(1000) NULL,
    `OVERALL_STATUS` VARCHAR(1000) NULL,
    `QUALYS_VULN_STATUS` VARCHAR(1000) NULL,
    `LAST_DETECTED` DATE NULL,
    `TECHNICAL_CONTACT` VARCHAR(1000) NULL,
    `EXCEPTION_REQUESTS` VARCHAR(1000) NULL,
    `CREATION_DATE` DATETIME NULL,
    `MODIFICATION_DATE` DATETIME NULL,
    `CREATED_BY` VARCHAR(50) NULL,
    `MODIFIED_BY` VARCHAR(50) NULL,

    PRIMARY KEY (`VULNERABILITY_OVERDUE_ID`));
*/
CREATE TABLE IF NOT EXISTS `InventoryDB`.`f5` (
  `F5_ID` INT AUTO_INCREMENT NOT NULL,
  `IP_ADDRESS`  VARCHAR(50) NOT NULL,
  `DEVICE_ID` VARCHAR(50) NOT NULL,
  `SITE_ID` VARCHAR(50) NOT NULL,
  `VSERVER_NAME` VARCHAR(500) NULL,
  `VIP` VARCHAR(50)  NULL,
  `POOL_NAME` VARCHAR(500)  NULL,
  `POOL_MEMBER` VARCHAR(500)  NULL,
  `NODE` VARCHAR(500)  NULL,
  `SERVICE_PORT` VARCHAR(500)  NULL,
  `MONITOR_VALUE` VARCHAR(500)  NULL,
  `MONITOR_STATUS` VARCHAR(500)  NULL,
  `LB_METHOD` VARCHAR(500)  NULL,
  `SSL_PROFILE` VARCHAR(500)  NULL,
  `MONITOR_VALUE` VARCHAR(500)  NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  `DESCRIPTION`  VARCHAR(500) NULL,
   PRIMARY KEY (`F5_ID`));
  
  
CREATE TABLE IF NOT EXISTS `InventoryDB`.`vulnerability_igw_master` (
    `VULNERABILITY_MASTER_ID` INT NOT NULL AUTO_INCREMENT UNIQUE,
    `SCAN_RESULT_ID` VARCHAR(1000) NOT NULL,  
    `DEVICE_IP` VARCHAR(1000) NULL,
    `DEVICE_NAME` VARCHAR(1000) NULL,
    `SEVERITY` VARCHAR(1000) NULL,
    `CVE_ID` VARCHAR(1000) NULL,
    `DUE_DATE` DATE NULL,
    `LAST_DETECTED` DATE NULL,
    `OVERALL_STATUS` VARCHAR(1000) NULL,
    `QUALYS_VULN_STATUS` VARCHAR(1000) NULL,
    /*`INPROGRESS_EXCEPTIONS` VARCHAR(1000) NULL,*/
    `ALL_EXCEPTIONS` VARCHAR(1000) NULL,
    `PN_CODE` VARCHAR(1000) NULL,
    `HW_EOS_DATE` DATE NULL,
    `VULN_FIX_PLAN_STATUS` VARCHAR(1000) NULL,
    `VULN_OPS_SEVERITY` VARCHAR(1000) NULL,
    `TECHNICAL_CONTACT` VARCHAR(1000) NULL,
    `CREATION_DATE` DATETIME NULL,
    `MODIFICATION_DATE` DATETIME NULL,
    `CREATED_BY` VARCHAR(50) NULL,
    `MODIFIED_BY` VARCHAR(50) NULL,

    PRIMARY KEY (`VULNERABILITY_MASTER_ID`));


CREATE TABLE IF NOT EXISTS `InventoryDB`.`vulnerability_igw_no_plan` (
    `VULNERABILITY_No_PLAN_ID` INT NOT NULL AUTO_INCREMENT UNIQUE, 
    `DEVICE_IP` VARCHAR(1000) NULL,
    `DEVICE_NAME` VARCHAR(1000) NULL,
    `PN_CODE` VARCHAR(1000) NULL,
    `CREATION_DATE` DATETIME NULL,
    `MODIFICATION_DATE` DATETIME NULL,
    `CREATED_BY` VARCHAR(50) NULL,
    `MODIFIED_BY` VARCHAR(50) NULL,

    PRIMARY KEY (`VULNERABILITY_No_PLAN_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`vulnerability_igw_not_found` (
    `VULNERABILITY_NOT_FOUND_ID` INT NOT NULL AUTO_INCREMENT UNIQUE, 
    `DEVICE_IP` VARCHAR(1000) NULL,
    `DEVICE_NAME` VARCHAR(1000) NULL,
    `CORRECT_DEVICE_ID` VARCHAR(1000) NULL,
    `CREATION_DATE` DATETIME NULL,
    `MODIFICATION_DATE` DATETIME NULL,
    `CREATED_BY` VARCHAR(50) NULL,
    `MODIFIED_BY` VARCHAR(50) NULL,

    PRIMARY KEY (`VULNERABILITY_NOT_FOUND_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`vulnerability_igw_archer` (
    `VULNERABILITY_ARCHER_ID` INT NOT NULL AUTO_INCREMENT UNIQUE,
    `SCAN_RESULT_ID` VARCHAR(1000) NOT NULL ,   
    `DEVICE_IP` VARCHAR(1000) NULL,
    `DEVICE_NAME` VARCHAR(1000) NULL,
    `TITLE` VARCHAR(1000) NULL,
    `DUE_DATE` DATE NULL,
    `FALSE_POSITIVE_DATE` DATE NULL,
    `SEVERITY` VARCHAR(1000) NULL,
    `OVERALL_STATUS` VARCHAR(1000) NULL,
    `QUALYS_VULN_STATUS` VARCHAR(1000) NULL,
    `LAST_DETECTED` DATE NULL,
    `TECHNICAL_CONTACT` VARCHAR(1000) NULL,
    `EXCEPTION_REQUESTS` VARCHAR(1000) NULL,
    `CVE_ID` VARCHAR(1000) NULL,
    `CREATION_DATE` DATETIME NULL,
    `MODIFICATION_DATE` DATETIME NULL,
    `CREATED_BY` VARCHAR(50) NULL,
    `MODIFIED_BY` VARCHAR(50) NULL,
    
    PRIMARY KEY (`VULNERABILITY_ARCHER_ID`));




CREATE TABLE IF NOT EXISTS InventoryDB.ipt_rma_tracker (
	`IPT_RMA_TRACKER_ID` INT NOT NULL AUTO_INCREMENT UNIQUE,
	`RMA_ORDER_NUMBER` VARCHAR(50) NULL,
	`SERVICE_REQUEST_NUMBER` VARCHAR(50) NULL,
	`SERIAL_NO` VARCHAR(50) NULL,
	`MAC` VARCHAR (50) NULL,
	`USER_ID` VARCHAR (50) NULL,
	`USER_INFO_AND_DEVICE_IMPACTED_DETAILS` VARCHAR(500) NULL,
	`RMA_ORDERED_DATE` DATE NULL,
	`FE_RECEIVING_THE_RMA_PART_FROM_DHL` VARCHAR(500) NULL,
	`CURRENT_STATUS` VARCHAR (500) NULL,
	`ACTUAL_RMA_RECEIVED_DATE` DATE NULL,
	`PART_NUMBER` VARCHAR (500) NULL,
	`ENGINEER_HANDLING_THE_RMA` VARCHAR(50) NULL,
	`PICKUP_DATE_SCHEDULED_IN_AIRWAY_BILL` DATE NULL,
	`FE_DELIVERING_THE_DEVICE_TO_DHL` VARCHAR(500)  NULL,
	`DELIVERY_LOCATION` VARCHAR(500) NULL,
	`FINAL_STATUS` VARCHAR(500) NULL,
	`ATTACHMENTS` VARCHAR(500) NULL,
	`REMARKS` VARCHAR(500) NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
	PRIMARY KEY (`IPT_RMA_TRACKER_ID`));
CREATE TABLE IF NOT EXISTS `InventoryDB`.`vulnerability_soc_master` (
    `VULNERABILITY_MASTER_ID` INT NOT NULL AUTO_INCREMENT UNIQUE,
    `SCAN_RESULT_ID` VARCHAR(1000) NOT NULL,  
    `DEVICE_IP` VARCHAR(1000) NULL,
    `DEVICE_NAME` VARCHAR(1000) NULL,
    `SEVERITY` VARCHAR(1000) NULL,
    `CVE_ID` VARCHAR(1000) NULL,
    `DUE_DATE` DATE NULL,
    `LAST_DETECTED` DATE NULL,
    `OVERALL_STATUS` VARCHAR(1000) NULL,
    `QUALYS_VULN_STATUS` VARCHAR(1000) NULL,
    `ALL_EXCEPTIONS` VARCHAR(1000) NULL,
    `PN_CODE` VARCHAR(1000) NULL,
    `HW_EOS_DATE` DATE NULL,
    `VULN_FIX_PLAN_STATUS` VARCHAR(1000) NULL,
    `VULN_OPS_SEVERITY` VARCHAR(1000) NULL,
    `TECHNICAL_CONTACT` VARCHAR(1000) NULL,
    `CREATION_DATE` DATETIME NULL,
    `MODIFICATION_DATE` DATETIME NULL,
    `CREATED_BY` VARCHAR(50) NULL,
    `MODIFIED_BY` VARCHAR(50) NULL,

    PRIMARY KEY (`VULNERABILITY_MASTER_ID`));


CREATE TABLE IF NOT EXISTS `InventoryDB`.`vulnerability_soc_no_plan` (
    `VULNERABILITY_No_PLAN_ID` INT NOT NULL AUTO_INCREMENT UNIQUE, 
    `DEVICE_IP` VARCHAR(1000) NULL,
    `DEVICE_NAME` VARCHAR(1000) NULL,
    `PN_CODE` VARCHAR(1000) NULL,
    `CREATION_DATE` DATETIME NULL,
    `MODIFICATION_DATE` DATETIME NULL,
    `CREATED_BY` VARCHAR(50) NULL,
    `MODIFIED_BY` VARCHAR(50) NULL,

    PRIMARY KEY (`VULNERABILITY_No_PLAN_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`vulnerability_soc_not_found` (
    `VULNERABILITY_NOT_FOUND_ID` INT NOT NULL AUTO_INCREMENT UNIQUE, 
    `DEVICE_IP` VARCHAR(1000) NULL,
    `DEVICE_NAME` VARCHAR(1000) NULL,
    `CORRECT_DEVICE_ID` VARCHAR(1000) NULL,
    `CREATION_DATE` DATETIME NULL,
    `MODIFICATION_DATE` DATETIME NULL,
    `CREATED_BY` VARCHAR(50) NULL,
    `MODIFIED_BY` VARCHAR(50) NULL,

    PRIMARY KEY (`VULNERABILITY_NOT_FOUND_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`vulnerability_soc_archer` (
    `VULNERABILITY_ARCHER_ID` INT NOT NULL AUTO_INCREMENT UNIQUE,
    `SCAN_RESULT_ID` VARCHAR(1000) NOT NULL ,   
    `DEVICE_IP` VARCHAR(1000) NULL,
    `DEVICE_NAME` VARCHAR(1000) NULL,
    `TITLE` VARCHAR(1000) NULL,
    `DUE_DATE` DATE NULL,
    `FALSE_POSITIVE_DATE` DATE NULL,
    `SEVERITY` VARCHAR(1000) NULL,
    `OVERALL_STATUS` VARCHAR(1000) NULL,
    `QUALYS_VULN_STATUS` VARCHAR(1000) NULL,
    `LAST_DETECTED` DATE NULL,
    `TECHNICAL_CONTACT` VARCHAR(1000) NULL,
    `EXCEPTION_REQUESTS` VARCHAR(1000) NULL,
    `CVE_ID` VARCHAR(1000) NULL,
    `CREATION_DATE` DATETIME NULL,
    `MODIFICATION_DATE` DATETIME NULL,
    `CREATED_BY` VARCHAR(50) NULL,
    `MODIFIED_BY` VARCHAR(50) NULL,
    
    PRIMARY KEY (`VULNERABILITY_ARCHER_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`snags` (
    `SNAG_ID` INT NOT NULL AUTO_INCREMENT UNIQUE,
    `HO_REF_ID` INT NOT NULL,  
    `DEVICE_NAME` VARCHAR(50) NULL,
    `SNAG_NAME` VARCHAR(50) NULL,
    `SNAG_STATUS` VARCHAR(50) NULL,
    `SNAG_CRITICALITY` VARCHAR(50) NULL,
    `REPORTED_DATE` DATETIME NULL,
    `CLOSURE_DATE` DATETIME NULL,
    `SNAG_CLOSURE_DATE` DATETIME NULL,
    `CREATION_DATE` DATETIME NULL,
    `MODIFICATION_DATE` DATETIME NULL,
    `CREATED_BY` VARCHAR(50) NULL,
    `MODIFIED_BY` VARCHAR(50) NULL,
    `HISTORY` TEXT NULL,
    `COMMENT_HISTORY` TEXT NULL,
    PRIMARY KEY (`SNAG_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`external_vrf_analysis` (
    `EXTERNAL_VRF_ANALYSIS_ID` INT NOT NULL AUTO_INCREMENT UNIQUE,
    `VRF` VARCHAR(100) NULL, 
    `PRIMARY_SITE` VARCHAR(100) NULL,
    `SECONDARY_SITE` VARCHAR(100) NULL,
    `NO_OF_RECEIVED_ROUTES` VARCHAR(100) NULL,
    `MISSING_ROUTES_IN_SECONDARY_SITE` TEXT NULL,
    `CREATION_DATE` DATETIME NULL,
    `MODIFICATION_DATE` DATETIME NULL,
    `CREATED_BY` VARCHAR(50) NULL,
    `MODIFIED_BY` VARCHAR(50) NULL,
    PRIMARY KEY (`EXTERNAL_VRF_ANALYSIS_ID`));

CREATE TABLE IF NOT EXISTS `InventoryDB`.`intranet_vrf_analysis` (
    `INTRANET_VRF_ANALYSIS_ID` INT NOT NULL AUTO_INCREMENT UNIQUE,
    `VRF` VARCHAR(100) NULL, 
    `REGION` VARCHAR(100) NULL,
    `PRIMARY_SITE` VARCHAR(100) NULL,
    `SECONDARY_SITE` VARCHAR(100) NULL,
    `NO_OF_RECEIVED_ROUTES` VARCHAR(100) NULL,
    `MISSING_ROUTES_IN_SECONDARY_SITE` TEXT NULL,
    `MISSING_SITES_IN_SECONDARY_SITE` TEXT NULL,
    `CREATION_DATE` DATETIME NULL,
    `MODIFICATION_DATE` DATETIME NULL,
    `CREATED_BY` VARCHAR(50) NULL,
    `MODIFIED_BY` VARCHAR(50) NULL,
    PRIMARY KEY (`INTRANET_VRF_ANALYSIS_ID`));

CREATE TABLE table_mappings (
  `TABLE_ID` INT AUTO_INCREMENT PRIMARY KEY,
  `TABLE_NAME` VARCHAR(50) NOT NULL);

CREATE TABLE attachments (
  `ATTACHMENT_ID` INT AUTO_INCREMENT PRIMARY KEY,
  `ATTACHMENT_NAME` VARCHAR(500) NOT NULL,
  `ATTACHMENT_PATH` VARCHAR(500) NOT NULL,
  `FILE_EXTENSION` VARCHAR(500) NOT NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `IS_TEMP` TINYINT(1) DEFAULT 1,
  `TABLE_ID` INT NOT NULL,
  `PRIMARY_ID` INT NOT NULL);

CREATE TABLE IF NOT EXISTS `InventoryDB`.`security_compliance_table` (
  `NODE_ID` INT AUTO_INCREMENT NOT NULL,
  `NODE_NAME` VARCHAR(100) NOT NULL,
  `FUNCTION` TEXT NULL,
  `PN_CODE` TEXT NULL,
  `DOMAIN` VARCHAR(100) NOT NULL,
  `CREATION_DATE` DATETIME NULL,
  `MODIFICATION_DATE` DATETIME NULL,
  `CREATED_BY` VARCHAR(50) NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  PRIMARY KEY (`NODE_ID`),
  UNIQUE INDEX `unq_node_domain` (`NODE_NAME`, `DOMAIN`));


        
INSERT INTO `inventory_scripts_status` (`script`, `status`) values ("EDN-DC-CAPACITY", "Completed");
INSERT INTO `inventory_scripts_status` (`script`, `status`) values ("IGW-DC-CAPACITY", "Completed");
INSERT INTO `inventory_scripts_status` (`script`, `status`) values ("EDN-IPAM", "Completed");
INSERT INTO `inventory_scripts_status` (`script`, `status`) values ("IGW-IPAM", "Completed");
INSERT INTO `inventory_scripts_status` (`script`, `status`) values ("SOC-IPAM", "Completed");
INSERT INTO `inventory_scripts_status` (`script`, `status`) values ("IPT-Endpoints", "Completed");
INSERT INTO `inventory_scripts_status` (`script`, `status`) values ("EDN-EXCHANGE", "Completed");
INSERT INTO `inventory_scripts_status` (`script`, `status`) values ("ACCCESS-POINTS", "Completed");
INSERT INTO `inventory_scripts_status` (`script`, `status`) values ("F5", "Completed");
INSERT INTO `inventory_scripts_status` (`script`, `status`) values ("EDN-VULN-TO-MASTER", "Completed");
INSERT INTO `inventory_scripts_status` (`script`, `status`) values ("EDN-VULN-TO-DEVICES", "Completed");
INSERT INTO `inventory_scripts_status` (`script`, `status`) values ("EDN-VULN-ARCHER", "Completed");
INSERT INTO `inventory_scripts_status` (`script`, `status`) values ("IGW-VULN-TO-MASTER", "Completed");
INSERT INTO `inventory_scripts_status` (`script`, `status`) values ("IGW-VULN-TO-DEVICES", "Completed");
INSERT INTO `inventory_scripts_status` (`script`, `status`) values ("IGW-VULN-ARCHER", "Completed");
INSERT INTO `inventory_scripts_status` (`script`, `status`) values ("SOC-VULN-TO-MASTER", "Completed");
INSERT INTO `inventory_scripts_status` (`script`, `status`) values ("SOC-VULN-TO-DEVICES", "Completed");
INSERT INTO `inventory_scripts_status` (`script`, `status`) values ("SOC-VULN-ARCHER", "Completed");
INSERT INTO `inventory_scripts_status` (`script`, `status`) values ("EDN-CORE-ROUTING", "Completed");
INSERT INTO `table_mappings` (`table_name`) values ("ipt_rma_tracker");
INSERT INTO `table_mappings` (`table_name`) values ("edn_ho_tracker");
